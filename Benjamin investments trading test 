{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNVdKnhu+eTeaW0OmYH4xJX"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PiIqxT5CfKXr","executionInfo":{"status":"ok","timestamp":1745190991116,"user_tz":-60,"elapsed":16734,"user":{"displayName":"Emmanuel Benjamin","userId":"01086758060055080048"}},"outputId":"26f9d152-042f-40d4-ba69-48783c71d39c"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: yfinance in /usr/local/lib/python3.11/dist-packages (0.2.55)\n","Requirement already satisfied: pandas>=1.3.0 in /usr/local/lib/python3.11/dist-packages (from yfinance) (2.2.2)\n","Requirement already satisfied: numpy>=1.16.5 in /usr/local/lib/python3.11/dist-packages (from yfinance) (2.0.2)\n","Requirement already satisfied: requests>=2.31 in /usr/local/lib/python3.11/dist-packages (from yfinance) (2.32.3)\n","Requirement already satisfied: multitasking>=0.0.7 in /usr/local/lib/python3.11/dist-packages (from yfinance) (0.0.11)\n","Requirement already satisfied: platformdirs>=2.0.0 in /usr/local/lib/python3.11/dist-packages (from yfinance) (4.3.7)\n","Requirement already satisfied: pytz>=2022.5 in /usr/local/lib/python3.11/dist-packages (from yfinance) (2025.2)\n","Requirement already satisfied: frozendict>=2.3.4 in /usr/local/lib/python3.11/dist-packages (from yfinance) (2.4.6)\n","Requirement already satisfied: peewee>=3.16.2 in /usr/local/lib/python3.11/dist-packages (from yfinance) (3.17.9)\n","Requirement already satisfied: beautifulsoup4>=4.11.1 in /usr/local/lib/python3.11/dist-packages (from yfinance) (4.13.4)\n","Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.11/dist-packages (from beautifulsoup4>=4.11.1->yfinance) (2.6)\n","Requirement already satisfied: typing-extensions>=4.0.0 in /usr/local/lib/python3.11/dist-packages (from beautifulsoup4>=4.11.1->yfinance) (4.13.2)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.11/dist-packages (from pandas>=1.3.0->yfinance) (2.8.2)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas>=1.3.0->yfinance) (2025.2)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests>=2.31->yfinance) (3.4.1)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests>=2.31->yfinance) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests>=2.31->yfinance) (2.3.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests>=2.31->yfinance) (2025.1.31)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.8.2->pandas>=1.3.0->yfinance) (1.17.0)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.11/dist-packages (2.2.2)\n","Requirement already satisfied: numpy>=1.23.2 in /usr/local/lib/python3.11/dist-packages (from pandas) (2.0.2)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.11/dist-packages (from pandas) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas) (2025.2)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas) (2025.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.8.2->pandas) (1.17.0)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.11/dist-packages (3.10.0)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (1.3.2)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (4.57.0)\n","Requirement already satisfied: kiwisolver>=1.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (1.4.8)\n","Requirement already satisfied: numpy>=1.23 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (2.0.2)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (24.2)\n","Requirement already satisfied: pillow>=8 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (11.1.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (3.2.3)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (2.8.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.7->matplotlib) (1.17.0)\n"]}],"source":["\n","!pip install yfinance\n","!pip install pandas\n","!pip install matplotlib"]},{"cell_type":"code","source":["\n","import pandas as pd\n","import yfinance as yf\n","\n","# Download historical price data\n","symbol = 'AAPL'\n","df = yf.download(symbol, start='2022-01-01', end='2023-01-01')\n","\n","# Calculate RSI\n","def compute_rsi(data, window=14):\n","    delta = data['Close'].diff()\n","    gain = (delta.where(delta > 0, 0)).rolling(window).mean()\n","    loss = (-delta.where(delta < 0, 0)).rolling(window).mean()\n","    rs = gain / loss\n","    return 100 - (100 / (1 + rs))\n","\n","df['RSI'] = compute_rsi(df)\n","\n","# Simple RSI strategy: Buy when RSI < 30, sell when RSI > 70\n","df['Signal'] = 0\n","df.loc[df['RSI'] < 30, 'Signal'] = 1  # Buy\n","df.loc[df['RSI'] > 70, 'Signal'] = -1  # Sell\n","\n","# Simulate returns\n","df['Daily Return'] = df['Close'].pct_change()\n","df['Strategy Return'] = df['Signal'].shift(1) * df['Daily Return']\n","\n","# Print results\n","print(f\"Total Strategy Return: {df['Strategy Return'].sum() * 100:.2f}%\")\n","print(f\"Buy/Sell Signals:\\n{df[df['Signal'] != 0][['RSI', 'Signal']]}\")"],"metadata":{"id":"WkdFAxFEfYHf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745191080989,"user_tz":-60,"elapsed":2012,"user":{"displayName":"Emmanuel Benjamin","userId":"01086758060055080048"}},"outputId":"764ba7a7-222a-4f91-fe59-26c641379416"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["YF.download() has changed argument auto_adjust default to True\n"]},{"output_type":"stream","name":"stderr","text":["\r[*********************100%***********************]  1 of 1 completed"]},{"output_type":"stream","name":"stdout","text":["Total Strategy Return: 18.05%\n","Buy/Sell Signals:\n","Price             RSI Signal\n","Ticker                      \n","Date                        \n","2022-01-21  15.517173      1\n","2022-01-24  15.097527      1\n","2022-01-25  15.344432      1\n","2022-01-26  18.336742      1\n","2022-01-27  20.416624      1\n","2022-02-23  26.506480      1\n","2022-03-08  26.142324      1\n","2022-03-28  71.205034     -1\n","2022-03-30  75.714579     -1\n","2022-03-31  77.010830     -1\n","2022-04-01  85.904806     -1\n","2022-04-04  85.758019     -1\n","2022-04-05  74.532151     -1\n","2022-04-25  25.928332      1\n","2022-04-26  23.929271      1\n","2022-04-27  26.171266      1\n","2022-05-24  28.754651      1\n","2022-06-17  27.309248      1\n","2022-07-08  76.969484     -1\n","2022-07-11  70.699807     -1\n","2022-07-19  72.705999     -1\n","2022-07-20  72.932570     -1\n","2022-07-21  81.143520     -1\n","2022-07-22  76.174177     -1\n","2022-07-25  70.731736     -1\n","2022-07-29  77.493879     -1\n","2022-08-01  74.384670     -1\n","2022-08-02  71.854313     -1\n","2022-08-03  74.285005     -1\n","2022-08-04  72.355614     -1\n","2022-08-05  78.822009     -1\n","2022-08-08  74.596117     -1\n","2022-08-09  72.700769     -1\n","2022-08-10  74.619221     -1\n","2022-08-11  75.966985     -1\n","2022-08-12  81.626574     -1\n","2022-08-15  85.911819     -1\n","2022-08-16  82.486465     -1\n","2022-08-17  83.126504     -1\n","2022-08-18  77.545802     -1\n","2022-08-19  72.085468     -1\n","2022-09-01  23.260286      1\n","2022-09-02  18.400047      1\n","2022-09-06  17.679985      1\n","2022-09-07  17.420202      1\n","2022-09-08  16.773485      1\n","2022-09-09  26.345699      1\n","2022-09-15  29.407593      1\n","2022-09-30  20.818830      1\n","2022-10-10  27.237563      1\n","2022-10-11  28.612887      1\n","2022-10-12  28.898015      1\n","2022-12-20  20.129141      1\n","2022-12-21  27.979438      1\n","2022-12-22  25.595215      1\n","2022-12-23  26.261653      1\n","2022-12-27  27.960267      1\n","2022-12-28  26.152360      1\n"]},{"output_type":"stream","name":"stderr","text":["\n"]}]}]}